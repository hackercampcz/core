import { parse } from "https://deno.land/std@0.181.0/flags/mod.ts";

const actions = [
  "Zn√°te se? ‚Üí üòà",
  "Chce≈° se potkat na campu? ‚Üí üôã",
  "Te≈°√≠≈° se? ‚Üí ü§©",
  "D√°te drink? ‚Üí üçª",
  "Zapa≈ô√≠te? ‚Üí :picklerick:",
  "Prokec√°te cel√Ω camp? ‚Üí üó£",
  "Hmm, netu≈°√≠≈°, co si m≈Ø≈æete ≈ô√≠ct? Zkus√≠≈° to na campu prolomit? ‚Üí :awkward_monkey_look:",
  "P≈ôijde Ti povƒõdom√Ω/√°? Neplete≈° se? Tak to na campu rozseknete? ‚Üí :cool-doge:",
  "Pot≈ôebuje≈° se sezn√°mit? ‚Üí :wave:",
  "Nem≈Ø≈æe≈° si ho/ji nechat uj√≠t? ‚Üí ü•ë",
];

function randomIndex(prev) {
  const x = Math.round(actions.length * Math.random()) - 1;
  return x === prev ? randomIndex(prev) : x;
}

function getActions() {
  const a = randomIndex();
  const b = randomIndex(a);
  console.log({ a, b });
  return [actions[a], actions[Math.max(b, 0)]];
}

async function sendMessageToSlack(profile) {
  const resp = await fetch(
    "https://hooks.slack.com/services/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",
    {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        blocks: [
          {
            type: "section",
            text: {
              type: "mrkdwn",
              text: [`Hey! <@${profile.slackID}> s n√°mi letos jede na camp.`]
                .concat(getActions())
                .join("\n"),
            },
            accessory: {
              type: "image",
              image_url: profile.image,
              alt_text: profile.name,
            },
          },
        ],
      }),
    }
  );
  return resp.text();
}

export async function postChatMessage(channel, message, token) {
  const resp = await fetch("https://slack.com/api/chat.postMessage", {
    method: "POST",
    headers: {
      Accept: "application/json",
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({
      channel,
      blocks: [
        {
          type: "section",
          text: {
            type: "mrkdwn",
            text: message,
          },
        },
      ],
    }),
  });
  return resp.json();
}

async function main({ token }) {
  await sendMessageToSlack({
    slackID: "U0417TG5GPJ",
    name: "Bohdan Bl√°hovec",
    image: "https://ca.slack-edge.com/T01V4Q0ACQ4-U0417TG5GPJ-bb34e5cea70b-512",
  });
  return;
  // await sendMessageToSlack({
  //   slackID: "U03RRCEUQCX",
  //   name: "Simona Haganov√°",
  //   image:
  //     "https://avatars.slack-edge.com/2022-08-03/3892425407684_5e3dd7e680df78a11c5f_512.jpg",
  // });
  const users = [
    // "U03SJP5SVTN",
    // "U03S07B11FH",
    // "U03T1N53VUG",
    // "U03SBT9BRCK",
    // "U03T19RUVPS",
    // "U03SBHZ3RB4",
    // "U03SBHA6X8S",
    // "U03SBEHAL2F",
    // "U03T18D9Y5N",
    // "U03RRCEUQCX",
    // "U03RQ1JG7JT",
    // "U03QXVAN0AH",
    // "U03RCGVL4LR",
    // "U03QZJ1578T",
    // "U03QVNFEHKL",
    // "U03QUN2P3A7",
    // "U03R6V1ANM7",
    // "U03QWNJD604",
    // "U03QU6KPR50",
    "U0202S9SB1T",
  ];
  const message = `Ahoj, t√°born√≠ku,

V√≠tej v na≈°em slacku. Zaƒç√°tek z√°≈ô√≠ se bl√≠≈æ√≠. Snad se tƒõ≈°√≠≈° stejnƒõ jako my.

Nastav si, pros√≠m, svou profilovou fotku, a≈• tƒõ ostatn√≠ poznaj√≠ nejen v kan√°le #kdo_prijede_na_camp (za 15 min tƒõ tam ohl√°s√≠me, tak ≈°up).

M≈Ø≈æe≈° se p≈ôipojit k jak√©mukoliv kan√°lu, kter√Ω Tƒõ zaj√≠m√°. M≈Ø≈æe≈° sledovat novinky o #program, festivalov√©m line-upu i n√°m z org t√Ωmu koukat pod ruce. Nebo se m≈Ø≈æe≈° kouknout, kde a jak zapojit sv√© ruce k d√≠lu ‚Üí #hands_wanted.

Pokud chce≈° nebo nab√≠z√≠≈° spoluj√≠zdu na camp, tak tady ‚Üí #spolujizda. Pokud nab√≠z√≠≈° voln√© m√≠sto ve stanu ƒçi chatce, tak tu ‚Üí #spolubydleni. D≈Øle≈æit√© novinky najde≈° v kan√°le #general.

M√°≈° ot√°zky? Nev√°hej se na n√°s obr√°tit. Help line: team@hackercamp.cz`;
  for (const slackID of users) {
    await postChatMessage(slackID, message, token);
  }
}

await main(parse(Deno.args));

// deno run --allow-net=hooks.slack.com slack-webhook-test.js --token xoxb-1990816352820-3333049321349-fYMHvigmiP4ApQur61t3tiOC
