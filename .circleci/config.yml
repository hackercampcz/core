version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0.0
  aws-cloudfront: topmonks/aws-cloudfront@1.0.0
  aws-s3: circleci/aws-s3@3.1.1
  codecov: codecov/codecov@3.2.5
  github: topmonks/github@1.4.0
  node: circleci/node@5.1.0
  pulumi: pulumi/pulumi@2.1.0
  rollbar: rollbar/deploy@1.0.1
  slack: circleci/slack@4.12.5

commands:
  read_deployment_envs:
    parameters:
      stack_name:
        type: string
        default: prod
      site_name:
        type: string
    steps:
      - pulumi/login
      - run:
          working_directory: infrastructure
          command: pulumi stack select << parameters.stack_name >>
      - run:
          name: Read S3 Bucket URI from Pulumi state for << parameters.site_name >>
          working_directory: infrastructure
          command: |
            S3_BUCKET_URI=$(pulumi stack output websites | jq -rM  '.["<< parameters.site_name >>"] | .s3BucketUri | @text')
            echo "export AWS_S3_BUCKET=\"${S3_BUCKET_URI}\"" >> $BASH_ENV
      - run:
          name: Read Cloudfront ID from Pulumi state for << parameters.site_name >>
          working_directory: infrastructure
          command: |
            CLOUDFRONT_ID=$(pulumi stack output websites | jq -rM  '.["<< parameters.site_name >>"] | .cloudFrontId | @text')
            echo "export AWS_CLOUDFRONT_DISTRIBUTION_ID=\"${CLOUDFRONT_ID}\"" >> $BASH_ENV
  read_build_envs:
    parameters:
      stack_name:
        type: string
        default: prod
    steps:
      - pulumi/login
      - run:
          working_directory: infrastructure
          command: pulumi stack select << parameters.stack_name >>
      - run:
          name: Read HC_API_URL from Pulumi state
          working_directory: infrastructure
          command: |
            API_URL=$(pulumi stack output apiUrl)
            echo "export HC_API_URL=\"${API_URL}\"" >> $BASH_ENV
      - run:
          name: Read HC_SLACK_CLIENT_ID from Pulumi config
          working_directory: infrastructure
          command: |
            SLACK_CLIENT_ID=$(pulumi config get slack-client-id)
            echo "export HC_SLACK_CLIENT_ID=\"${SLACK_CLIENT_ID}\"" >> $BASH_ENV
      - run:
          name: Read HC_DONUT_HOSTNAME from Pulumi config
          working_directory: infrastructure
          command: |
            DONUT_HOSTNAME=$(pulumi config get donut-domain)
            echo "export HC_DONUT_HOSTNAME=\"${DONUT_HOSTNAME}\"" >> $BASH_ENV
      - run:
          name: Read HC_WEB_HOSTNAME from Pulumi config
          working_directory: infrastructure
          command: |
            WEB_HOSTNAME=$(pulumi config get web-domain)
            echo "export HC_WEB_HOSTNAME=\"${WEB_HOSTNAME}\"" >> $BASH_ENV
  deploy_website:
    parameters:
      stack_name:
        type: string
        default: prod
      site_name:
        type: string
      distribution_id:
        type: string
        default: "${AWS_CLOUDFRONT_DISTRIBUTION_ID}"
      s3_bucket_uri:
        type: string
        default: "${AWS_S3_BUCKET}"
      paths:
        type: string
        default: "/*"
      distribution_folder:
        type: string
        default: dist
      after_s3_sync:
        description: Steps that will be execute after S3 sync, but before Cloudfront distribution invalidation
        type: steps
        default: []
    steps:
      - read_deployment_envs:
          stack_name: << parameters.stack_name >>
          site_name: << parameters.site_name >>
      - aws-s3/sync:
          from: << parameters.distribution_folder >>/<< parameters.site_name >>
          to: << parameters.s3_bucket_uri >>
      - steps: << parameters.after_s3_sync >>
      - aws-cloudfront/invalidate:
          distribution_id: << parameters.distribution_id >>
          paths: << parameters.paths >>

jobs:
  provision:
    parameters:
      stack_name:
        type: string
        default: prod
    machine:
      image: ubuntu-2204:2023.02.1
    resource_class: arm.medium
    environment:
      AWS_STS_REGIONAL_ENDPOINTS: regional
      ROLLBAR_ACCESS_TOKEN: 3bfe96c3b97941d9acff53c6913b9ccc
    steps:
      - checkout
      - pulumi/login
      - node/install
      - node/install-yarn
      - node/install-packages:
          pkg-manager: yarn-berry
          cache-version: v2-machine-provision
          override-ci-command: yarn workspaces focus @hackercamp/infrastructure @hackercamp/donut @hackercamp/api @hackercamp/lib
      - run:
          working_directory: infrastructure
          command: pulumi stack select << parameters.stack_name >>
      - pulumi/update:
          working_directory: infrastructure
          stack: << parameters.stack_name >>
          skip-preview: true
      - rollbar/notify_deploy
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hackercamp

  preview-provision:
    parameters:
      stack_name:
        type: string
        default: prod
    machine:
      image: ubuntu-2204:2023.02.1
    resource_class: arm.medium
    steps:
      - checkout
      - pulumi/login
      - node/install
      - node/install-yarn
      - node/install-packages:
          pkg-manager: yarn-berry
          cache-version: v1-machine-provision
          override-ci-command: yarn workspaces focus @hackercamp/infrastructure @hackercamp/donut @hackercamp/api @hackercamp/lib
      - run:
          working_directory: infrastructure
          command: pulumi stack select << parameters.stack_name >>
      - pulumi/preview:
          working_directory: infrastructure
          stack: << parameters.stack_name >>
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hackercamp

  merge-pr:
    docker:
      - image: cimg/base:2023.05
    steps:
      - checkout
      - github/install
      - github/merge_pr:
          rebase: true
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hackercamp

  build-website:
    parameters:
      site_name:
        type: string
      environment:
        type: string
        default: production
      rollbar_access_token:
        type: string
        default: ""
    machine:
      image: ubuntu-2204:2023.02.1
    resource_class: arm.large
    environment:
      ROLLBAR_ACCESS_TOKEN: << parameters.rollbar_access_token >>
    steps:
      - checkout
      - node/install
      - node/install-yarn
      - node/install-packages:
          pkg-manager: yarn-berry
          cache-version: v1-machine-build
          override-ci-command: yarn workspaces focus @hackercamp/core @hackercamp/donut @hackercamp/web @hackercamp/lib
      - read_build_envs
      - run:
          name: Export build metadata
          command: |
            echo '{}' | \
            jq --arg key0 'environment' \
               --arg value0 '<< parameters.environment >>' \
               --arg key1 'version' \
               --arg value1 $CIRCLE_SHA1 \
               --arg key2 'build' \
               --arg value2 $CIRCLE_BUILD_NUM \
               --arg key3 'hostname' \
               --arg value3 "$HC_DONUT_HOSTNAME" \
               --arg key4 'api-host' \
               --arg value4 "$HC_API_URL" \
               --arg key5 'slack/client-id' \
               --arg value5 "$HC_SLACK_CLIENT_ID" \
               --arg key5 'rollbar/access-token' \
               --arg value5 "$ROLLBAR_ACCESS_TOKEN" \
               '. | .[$key0]=$value0 | .[$key1]=$value1 | .[$key2]=$value2 | .[$key3]=$value3 | .[$key4]=$value4 | .[$key5]=$value5' \
            > << parameters.site_name >>/src/data/build.json
      - run:
          name: Build website << parameters.site_name >>
          command: yarn build:<< parameters.site_name >>
      - persist_to_workspace:
          root: .
          paths: [ dist ]
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hackercamp

  deploy-site:
    parameters:
      stack_name:
        type: string
        default: prod
      site_name:
        type: string
      after_s3_sync:
        description: Steps that will be execute after S3 sync, but before Cloudfront distribution invalidation
        type: steps
        default: [ ]
      rollbar_access_token:
        type: string
        default: ""
    executor: aws-cli/default
    environment:
      ROLLBAR_ACCESS_TOKEN: << parameters.rollbar_access_token >>
      AWS_RETRY_MODE: standard
      AWS_MAX_ATTEMPTS: 5
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - deploy_website:
          stack_name: << parameters.stack_name >>
          site_name: << parameters.site_name >>
          after_s3_sync: << parameters.after_s3_sync >>
      - rollbar/notify_deploy
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hackercamp

workflows:
  ci:
    jobs:
      - preview-provision:
          context: org-global
          filters:
            branches:
              ignore: trunk
      - provision:
          context: org-global
          filters:
            branches:
              only: trunk
      - merge-pr:
          context:
            - org-github
            - org-global
          requires:
            - preview-provision
            - build-donut
            - build-web
          filters:
            branches:
              only: /renovate\/.*/
      - build-website:
          name: build-donut
          site_name: donut.hackercamp.cz
          rollbar_access_token: a1f80d94b33346c1baf8e5be27ae5646
          context: org-global
          requires:
            - provision
      - deploy-site:
          name: deploy-donut
          site_name: donut.hackercamp.cz
          rollbar_access_token: 6ed48e07fedb43bb9767261178684740
          context: org-global
          requires:
            - build-donut
          filters:
            branches:
              only: trunk
      - build-website:
          name: build-web
          site_name: www.hackercamp.cz
          rollbar_access_token: 0e85a6c66092466eb20ef77aae300485
          context: org-global
          requires:
            - provision
      - deploy-site:
          name: deploy-web
          site_name: www.hackercamp.cz
          rollbar_access_token: 1f07ff28d2d34cef95f57f34f8fab39d
          context: org-global
          requires:
            - build-web
          filters:
            branches:
              only: trunk
