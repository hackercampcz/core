version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.1.0
  aws-cloudfront: topmonks/aws-cloudfront@1.0.0
  aws-s3: circleci/aws-s3@3.0.0
  codecov: codecov/codecov@3.2.2
  github: topmonks/github@1.1.0
  node: circleci/node@5.0.1
  pulumi: pulumi/pulumi@2.1.0
  rollbar: rollbar/deploy@1.0.1
  slack: circleci/slack@4.8.3

commands:
  install_packages:
    parameters:
      working_directory:
        type: string
        default: .
    steps:
      - node/install-packages:
          pkg-manager: yarn-berry
          override-ci-command: yarn install --immutable
  read_deployment_envs:
    parameters:
      stack_name:
        type: string
        default: prod
      site_name:
        type: string
    steps:
      - pulumi/login
      - run:
          command: pulumi stack select << parameters.stack_name >>
      - run:
          name: Read S3 Bucket URI from Pulumi state for << parameters.site_name >>
          command: |
            S3_BUCKET_URI=$(pulumi stack output websites | jq -rM  '.["<< parameters.site_name >>"] | .s3BucketUri | @text')
            echo "export AWS_S3_BUCKET=\"${S3_BUCKET_URI}\"" >> $BASH_ENV
      - run:
          name: Read Cloudfront ID from Pulumi state for << parameters.site_name >>
          command: |
            CLOUDFRONT_ID=$(pulumi stack output websites | jq -rM  '.["<< parameters.site_name >>"] | .cloudFrontId | @text')
            echo "export AWS_CLOUDFRONT_DISTRIBUTION_ID=\"${CLOUDFRONT_ID}\"" >> $BASH_ENV
  read_access_envs:
    parameters:
      stack_name:
        type: string
        default: prod
    steps:
      - pulumi/login
      - run:
          command: pulumi stack select << parameters.stack_name >>
      - run:
          name: Read AWS_ACCESS_KEY_ID from Pulumi state
          command: |
            ACCESS_KEY_ID=$(pulumi stack output accessKeyId)
            echo "export MYTREES_AWS_ACCESS_KEY_ID=\"${ACCESS_KEY_ID}\"" >> $BASH_ENV
      - run:
          name: Read AWS_ACCESS_SECRET_KEY from Pulumi state
          command: |
            ACCESS_SECRET_KEY=$(pulumi stack output --show-secrets accessSecretKey)
            echo "export MYTREES_AWS_ACCESS_SECRET_KEY=\"${ACCESS_SECRET_KEY}\"" >> $BASH_ENV
      - run:
          name: Read BACKEND_HOST_NAME from Pulumi state
          command: |
            BACKEND_HOST_NAME=$(pulumi stack output --show-secrets backendHostName)
            echo "export MYTREES_BACKEND_HOST_NAME=\"${BACKEND_HOST_NAME}\"" >> $BASH_ENV
  deploy_website:
    parameters:
      stack_name:
        type: string
        default: prod
      site_name:
        type: string
      distribution_id:
        type: string
        default: "${AWS_CLOUDFRONT_DISTRIBUTION_ID}"
      s3_bucket_uri:
        type: string
        default: "${AWS_S3_BUCKET}"
      paths:
        type: string
        default: "/*"
      distribution_folder:
        type: string
        default: dist
      after_s3_sync:
        description: Steps that will be execute after S3 sync, but before Cloudfront distribution invalidation
        type: steps
        default: []
    steps:
      - read_deployment_envs:
          stack_name: << parameters.stack_name >>
          site_name: << parameters.site_name >>
      - aws-s3/sync:
          from: << parameters.distribution_folder >>/<< parameters.site_name >>
          to: << parameters.s3_bucket_uri >>
      - steps: << parameters.after_s3_sync >>
      - aws-cloudfront/invalidate:
          distribution_id: << parameters.distribution_id >>
          paths: << parameters.paths >>

jobs:

  provision:
    parameters:
      stack_name:
        type: string
        default: prod
    executor:
      name: node/default
      tag: "current"
    environment:
      AWS_STS_REGIONAL_ENDPOINTS: regional
    steps:
      - checkout
      - pulumi/login
      - install_packages
      - run:
          command: pulumi stack select << parameters.stack_name >>
      - pulumi/update:
          stack: << parameters.stack_name >>
          skip-preview: true
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hackercamp

  preview-provision:
    parameters:
      stack_name:
        type: string
        default: prod
    executor:
      name: node/default
      tag: "current"
    steps:
      - checkout
      - pulumi/login
      - install_packages
      - run:
          command: pulumi stack select << parameters.stack_name >>
      - pulumi/preview:
          stack: << parameters.stack_name >>
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hackercamp

  merge-pr:
    docker:
      - image: cimg/base:2022.03
    steps:
      - checkout
      - github/install
      - github/merge_pr:
          rebase: true
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hackercamp

  build-website:
    parameters:
      site_name:
        type: string
      environment:
        type: string
        default: production
    executor:
      name: node/default
      tag: "current"
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Export build metadata
          command: |
            echo '{}' | \
            jq --arg key0 'environment' \
               --arg value0 '<< parameters.environment >>' \
               --arg key1 'version' \
               --arg value1 $CIRCLE_SHA1 \
               --arg key2 'build' \
               --arg value2 $CIRCLE_BUILD_NUM \
               '. | .[$key0]=$value0 | .[$key1]=$value1 | .[$key2]=$value2' \
            > << parameters.site_name >>/src/data/build.json
      - run:
          name: Build website << parameters.site_name >>
          command: yarn build:<< parameters.site_name >>
      - persist_to_workspace:
          root: .
          paths: [ dist ]
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hackercamp

  deploy-site:
    parameters:
      stack_name:
        type: string
        default: prod
      site_name:
        type: string
      after_s3_sync:
        description: Steps that will be execute after S3 sync, but before Cloudfront distribution invalidation
        type: steps
        default: [ ]
      rollbar_access_token:
        type: string
        default: ""
    executor:
      name: node/default
      tag: "current"
    environment:
      ROLLBAR_ACCESS_TOKEN: << parameters.rollbar_access_token >>
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - deploy_website:
          stack_name: << parameters.stack_name >>
          site_name: << parameters.site_name >>
          after_s3_sync: << parameters.after_s3_sync >>
      - rollbar/notify_deploy
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: ntf-hackercamp

workflows:
  ci:
    jobs:
      - preview-provision:
          context: org-global
          filters:
            branches:
              ignore: trunk
      - provision:
          context: org-global
          filters:
            branches:
              only: trunk
      - merge-pr:
          context:
            - org-github
            - org-global
          requires:
            - preview-provision
            - build-donut
            - build-web
          filters:
            branches:
              only: /renovate\/.*/
      - build-website:
          name: build-donut
          site_name: donut.hackercamp.cz
          context: org-global
      - deploy-site:
          name: deploy-donut
          site_name: donut.hackercamp.cz
          rollbar_access_token: 6ed48e07fedb43bb9767261178684740
          context: org-global
          requires:
            - provision
            - build-donut
          filters:
            branches:
              only: trunk
      - build-website:
          name: build-web
          site_name: www.hackercamp.cz
          context: org-global
      - deploy-site:
          name: deploy-web
          site_name: www.hackercamp.cz
          context: org-global
          requires:
            - provision
            - build-web
          filters:
            branches:
              only: trunk
